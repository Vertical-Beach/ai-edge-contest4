keys = ['l_conv1_7x7_s2.weight', 'l_conv1_7x7_s2.bias', 'l_conv1_7x7_s2_BatchNorm.weight', 'l_conv1_7x7_s2_BatchNorm.bias', 'l_conv1_7x7_s2_BatchNorm.running_mean', 'l_conv1_7x7_s2_BatchNorm.running_var', 'l_conv1_7x7_s2_BatchNorm.num_batches_tracked', 'l_conv2_3x3_reduce.weight', 'l_conv2_3x3_reduce.bias', 'l_conv2_3x3_reduce_BatchNorm.weight', 'l_conv2_3x3_reduce_BatchNorm.bias', 'l_conv2_3x3_reduce_BatchNorm.running_mean', 'l_conv2_3x3_reduce_BatchNorm.running_var', 'l_conv2_3x3_reduce_BatchNorm.num_batches_tracked', 'l_conv2_3x3.weight', 'l_conv2_3x3.bias', 'l_conv2_3x3_BatchNorm.weight', 'l_conv2_3x3_BatchNorm.bias', 'l_conv2_3x3_BatchNorm.running_mean', 'l_conv2_3x3_BatchNorm.running_var', 'l_conv2_3x3_BatchNorm.num_batches_tracked', 'l_inception_3a_1x1.weight', 'l_inception_3a_1x1.bias', 'l_inception_3a_1x1_BatchNorm.weight', 'l_inception_3a_1x1_BatchNorm.bias', 'l_inception_3a_1x1_BatchNorm.running_mean', 'l_inception_3a_1x1_BatchNorm.running_var', 'l_inception_3a_1x1_BatchNorm.num_batches_tracked', 'l_inception_3a_3x3_reduce.weight', 'l_inception_3a_3x3_reduce.bias', 'l_inception_3a_3x3_reduce_BatchNorm.weight', 'l_inception_3a_3x3_reduce_BatchNorm.bias', 'l_inception_3a_3x3_reduce_BatchNorm.running_mean', 'l_inception_3a_3x3_reduce_BatchNorm.running_var', 'l_inception_3a_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_3a_3x3.weight', 'l_inception_3a_3x3.bias', 'l_inception_3a_3x3_BatchNorm.weight', 'l_inception_3a_3x3_BatchNorm.bias', 'l_inception_3a_3x3_BatchNorm.running_mean', 'l_inception_3a_3x3_BatchNorm.running_var', 'l_inception_3a_3x3_BatchNorm.num_batches_tracked', 'l_inception_3a_5x5_reduce.weight', 'l_inception_3a_5x5_reduce.bias', 'l_inception_3a_5x5_reduce_BatchNorm.weight', 'l_inception_3a_5x5_reduce_BatchNorm.bias', 'l_inception_3a_5x5_reduce_BatchNorm.running_mean', 'l_inception_3a_5x5_reduce_BatchNorm.running_var', 'l_inception_3a_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_3a_5x5.weight', 'l_inception_3a_5x5.bias', 'l_inception_3a_5x5_BatchNorm.weight', 'l_inception_3a_5x5_BatchNorm.bias', 'l_inception_3a_5x5_BatchNorm.running_mean', 'l_inception_3a_5x5_BatchNorm.running_var', 'l_inception_3a_5x5_BatchNorm.num_batches_tracked', 'l_inception_3a_pool_proj.weight', 'l_inception_3a_pool_proj.bias', 'l_inception_3a_pool_proj_BatchNorm.weight', 'l_inception_3a_pool_proj_BatchNorm.bias', 'l_inception_3a_pool_proj_BatchNorm.running_mean', 'l_inception_3a_pool_proj_BatchNorm.running_var', 'l_inception_3a_pool_proj_BatchNorm.num_batches_tracked', 'l_inception_3b_1x1.weight', 'l_inception_3b_1x1.bias', 'l_inception_3b_1x1_BatchNorm.weight', 'l_inception_3b_1x1_BatchNorm.bias', 'l_inception_3b_1x1_BatchNorm.running_mean', 'l_inception_3b_1x1_BatchNorm.running_var', 'l_inception_3b_1x1_BatchNorm.num_batches_tracked', 'l_inception_3b_3x3_reduce.weight', 'l_inception_3b_3x3_reduce.bias', 'l_inception_3b_3x3_reduce_BatchNorm.weight', 'l_inception_3b_3x3_reduce_BatchNorm.bias', 'l_inception_3b_3x3_reduce_BatchNorm.running_mean', 'l_inception_3b_3x3_reduce_BatchNorm.running_var', 'l_inception_3b_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_3b_3x3.weight', 'l_inception_3b_3x3.bias', 'l_inception_3b_3x3_BatchNorm.weight', 'l_inception_3b_3x3_BatchNorm.bias', 'l_inception_3b_3x3_BatchNorm.running_mean', 'l_inception_3b_3x3_BatchNorm.running_var', 'l_inception_3b_3x3_BatchNorm.num_batches_tracked', 'l_inception_3b_5x5_reduce.weight', 'l_inception_3b_5x5_reduce.bias', 'l_inception_3b_5x5_reduce_BatchNorm.weight', 'l_inception_3b_5x5_reduce_BatchNorm.bias', 'l_inception_3b_5x5_reduce_BatchNorm.running_mean', 'l_inception_3b_5x5_reduce_BatchNorm.running_var', 'l_inception_3b_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_3b_5x5.weight', 'l_inception_3b_5x5.bias', 'l_inception_3b_5x5_BatchNorm.weight', 'l_inception_3b_5x5_BatchNorm.bias', 'l_inception_3b_5x5_BatchNorm.running_mean', 'l_inception_3b_5x5_BatchNorm.running_var', 'l_inception_3b_5x5_BatchNorm.num_batches_tracked', 'l_inception_3b_pool_proj.weight', 'l_inception_3b_pool_proj.bias', 'l_inception_3b_pool_proj_BatchNorm.weight', 'l_inception_3b_pool_proj_BatchNorm.bias', 'l_inception_3b_pool_proj_BatchNorm.running_mean', 'l_inception_3b_pool_proj_BatchNorm.running_var', 'l_inception_3b_pool_proj_BatchNorm.num_batches_tracked', 'l_inception_4a_1x1.weight', 'l_inception_4a_1x1.bias', 'l_inception_4a_1x1_BatchNorm.weight', 'l_inception_4a_1x1_BatchNorm.bias', 'l_inception_4a_1x1_BatchNorm.running_mean', 'l_inception_4a_1x1_BatchNorm.running_var', 'l_inception_4a_1x1_BatchNorm.num_batches_tracked', 'l_inception_4a_3x3_reduce.weight', 'l_inception_4a_3x3_reduce.bias', 'l_inception_4a_3x3_reduce_BatchNorm.weight', 'l_inception_4a_3x3_reduce_BatchNorm.bias', 'l_inception_4a_3x3_reduce_BatchNorm.running_mean', 'l_inception_4a_3x3_reduce_BatchNorm.running_var', 'l_inception_4a_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_4a_3x3.weight', 'l_inception_4a_3x3.bias', 'l_inception_4a_3x3_BatchNorm.weight', 'l_inception_4a_3x3_BatchNorm.bias', 'l_inception_4a_3x3_BatchNorm.running_mean', 'l_inception_4a_3x3_BatchNorm.running_var', 'l_inception_4a_3x3_BatchNorm.num_batches_tracked', 'l_inception_4a_5x5_reduce.weight', 'l_inception_4a_5x5_reduce.bias', 'l_inception_4a_5x5_reduce_BatchNorm.weight', 'l_inception_4a_5x5_reduce_BatchNorm.bias', 'l_inception_4a_5x5_reduce_BatchNorm.running_mean', 'l_inception_4a_5x5_reduce_BatchNorm.running_var', 'l_inception_4a_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_4a_5x5.weight', 'l_inception_4a_5x5.bias', 'l_inception_4a_5x5_BatchNorm.weight', 'l_inception_4a_5x5_BatchNorm.bias', 'l_inception_4a_5x5_BatchNorm.running_mean', 'l_inception_4a_5x5_BatchNorm.running_var', 'l_inception_4a_5x5_BatchNorm.num_batches_tracked', 'l_inception_4a_pool_proj.weight', 'l_inception_4a_pool_proj.bias', 'l_inception_4a_pool_proj_BatchNorm.weight', 'l_inception_4a_pool_proj_BatchNorm.bias', 'l_inception_4a_pool_proj_BatchNorm.running_mean', 'l_inception_4a_pool_proj_BatchNorm.running_var', 'l_inception_4a_pool_proj_BatchNorm.num_batches_tracked', 'l_inception_4b_1x1.weight', 'l_inception_4b_1x1.bias', 'l_inception_4b_1x1_BatchNorm.weight', 'l_inception_4b_1x1_BatchNorm.bias', 'l_inception_4b_1x1_BatchNorm.running_mean', 'l_inception_4b_1x1_BatchNorm.running_var', 'l_inception_4b_1x1_BatchNorm.num_batches_tracked', 'l_inception_4b_3x3_reduce.weight', 'l_inception_4b_3x3_reduce.bias', 'l_inception_4b_3x3_reduce_BatchNorm.weight', 'l_inception_4b_3x3_reduce_BatchNorm.bias', 'l_inception_4b_3x3_reduce_BatchNorm.running_mean', 'l_inception_4b_3x3_reduce_BatchNorm.running_var', 'l_inception_4b_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_4b_3x3.weight', 'l_inception_4b_3x3.bias', 'l_inception_4b_3x3_BatchNorm.weight', 'l_inception_4b_3x3_BatchNorm.bias', 'l_inception_4b_3x3_BatchNorm.running_mean', 'l_inception_4b_3x3_BatchNorm.running_var', 'l_inception_4b_3x3_BatchNorm.num_batches_tracked', 'l_inception_4b_5x5_reduce.weight', 'l_inception_4b_5x5_reduce.bias', 'l_inception_4b_5x5_reduce_BatchNorm.weight', 'l_inception_4b_5x5_reduce_BatchNorm.bias', 'l_inception_4b_5x5_reduce_BatchNorm.running_mean', 'l_inception_4b_5x5_reduce_BatchNorm.running_var', 'l_inception_4b_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_4b_5x5.weight', 'l_inception_4b_5x5.bias', 'l_inception_4b_5x5_BatchNorm.weight', 'l_inception_4b_5x5_BatchNorm.bias', 'l_inception_4b_5x5_BatchNorm.running_mean', 'l_inception_4b_5x5_BatchNorm.running_var', 'l_inception_4b_5x5_BatchNorm.num_batches_tracked', 'l_inception_4b_pool_proj.weight', 'l_inception_4b_pool_proj.bias', 'l_inception_4b_pool_proj_BatchNorm.weight', 'l_inception_4b_pool_proj_BatchNorm.bias', 'l_inception_4b_pool_proj_BatchNorm.running_mean', 'l_inception_4b_pool_proj_BatchNorm.running_var', 'l_inception_4b_pool_proj_BatchNorm.num_batches_tracked', 'l_inception_4c_1x1.weight', 'l_inception_4c_1x1.bias', 'l_inception_4c_1x1_BatchNorm.weight', 'l_inception_4c_1x1_BatchNorm.bias', 'l_inception_4c_1x1_BatchNorm.running_mean', 'l_inception_4c_1x1_BatchNorm.running_var', 'l_inception_4c_1x1_BatchNorm.num_batches_tracked', 'l_inception_4c_3x3_reduce.weight', 'l_inception_4c_3x3_reduce.bias', 'l_inception_4c_3x3_reduce_BatchNorm.weight', 'l_inception_4c_3x3_reduce_BatchNorm.bias', 'l_inception_4c_3x3_reduce_BatchNorm.running_mean', 'l_inception_4c_3x3_reduce_BatchNorm.running_var', 'l_inception_4c_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_4c_3x3.weight', 'l_inception_4c_3x3.bias', 'l_inception_4c_3x3_BatchNorm.weight', 'l_inception_4c_3x3_BatchNorm.bias', 'l_inception_4c_3x3_BatchNorm.running_mean', 'l_inception_4c_3x3_BatchNorm.running_var', 'l_inception_4c_3x3_BatchNorm.num_batches_tracked', 'l_inception_4c_5x5_reduce.weight', 'l_inception_4c_5x5_reduce.bias', 'l_inception_4c_5x5_reduce_BatchNorm.weight', 'l_inception_4c_5x5_reduce_BatchNorm.bias', 'l_inception_4c_5x5_reduce_BatchNorm.running_mean', 'l_inception_4c_5x5_reduce_BatchNorm.running_var', 'l_inception_4c_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_4c_5x5.weight', 'l_inception_4c_5x5.bias', 'l_inception_4c_5x5_BatchNorm.weight', 'l_inception_4c_5x5_BatchNorm.bias', 'l_inception_4c_5x5_BatchNorm.running_mean', 'l_inception_4c_5x5_BatchNorm.running_var', 'l_inception_4c_5x5_BatchNorm.num_batches_tracked', 'l_inception_4c_pool_proj.weight', 'l_inception_4c_pool_proj.bias', 'l_inception_4c_pool_proj_BatchNorm.weight', 'l_inception_4c_pool_proj_BatchNorm.bias', 'l_inception_4c_pool_proj_BatchNorm.running_mean', 'l_inception_4c_pool_proj_BatchNorm.running_var', 'l_inception_4c_pool_proj_BatchNorm.num_batches_tracked', 'l_inception_4d_1x1.weight', 'l_inception_4d_1x1.bias', 'l_inception_4d_1x1_BatchNorm.weight', 'l_inception_4d_1x1_BatchNorm.bias', 'l_inception_4d_1x1_BatchNorm.running_mean', 'l_inception_4d_1x1_BatchNorm.running_var', 'l_inception_4d_1x1_BatchNorm.num_batches_tracked', 'l_inception_4d_3x3_reduce.weight', 'l_inception_4d_3x3_reduce.bias', 'l_inception_4d_3x3_reduce_BatchNorm.weight', 'l_inception_4d_3x3_reduce_BatchNorm.bias', 'l_inception_4d_3x3_reduce_BatchNorm.running_mean', 'l_inception_4d_3x3_reduce_BatchNorm.running_var', 'l_inception_4d_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_4d_3x3.weight', 'l_inception_4d_3x3.bias', 'l_inception_4d_3x3_BatchNorm.weight', 'l_inception_4d_3x3_BatchNorm.bias', 'l_inception_4d_3x3_BatchNorm.running_mean', 'l_inception_4d_3x3_BatchNorm.running_var', 'l_inception_4d_3x3_BatchNorm.num_batches_tracked', 'l_inception_4d_5x5_reduce.weight', 'l_inception_4d_5x5_reduce.bias', 'l_inception_4d_5x5_reduce_BatchNorm.weight', 'l_inception_4d_5x5_reduce_BatchNorm.bias', 'l_inception_4d_5x5_reduce_BatchNorm.running_mean', 'l_inception_4d_5x5_reduce_BatchNorm.running_var', 'l_inception_4d_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_4d_5x5.weight', 'l_inception_4d_5x5.bias', 'l_inception_4d_5x5_BatchNorm.weight', 'l_inception_4d_5x5_BatchNorm.bias', 'l_inception_4d_5x5_BatchNorm.running_mean', 'l_inception_4d_5x5_BatchNorm.running_var', 'l_inception_4d_5x5_BatchNorm.num_batches_tracked', 'l_inception_4d_pool_proj.weight', 'l_inception_4d_pool_proj.bias', 'l_inception_4d_pool_proj_BatchNorm.weight', 'l_inception_4d_pool_proj_BatchNorm.bias', 'l_inception_4d_pool_proj_BatchNorm.running_mean', 'l_inception_4d_pool_proj_BatchNorm.running_var', 'l_inception_4d_pool_proj_BatchNorm.num_batches_tracked', 'l_inception_4e_1x1.weight', 'l_inception_4e_1x1.bias', 'l_inception_4e_1x1_BatchNorm.weight', 'l_inception_4e_1x1_BatchNorm.bias', 'l_inception_4e_1x1_BatchNorm.running_mean', 'l_inception_4e_1x1_BatchNorm.running_var', 'l_inception_4e_1x1_BatchNorm.num_batches_tracked', 'l_inception_4e_3x3_reduce.weight', 'l_inception_4e_3x3_reduce.bias', 'l_inception_4e_3x3_reduce_BatchNorm.weight', 'l_inception_4e_3x3_reduce_BatchNorm.bias', 'l_inception_4e_3x3_reduce_BatchNorm.running_mean', 'l_inception_4e_3x3_reduce_BatchNorm.running_var', 'l_inception_4e_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_4e_3x3.weight', 'l_inception_4e_3x3.bias', 'l_inception_4e_3x3_BatchNorm.weight', 'l_inception_4e_3x3_BatchNorm.bias', 'l_inception_4e_3x3_BatchNorm.running_mean', 'l_inception_4e_3x3_BatchNorm.running_var', 'l_inception_4e_3x3_BatchNorm.num_batches_tracked', 'l_inception_4e_5x5_reduce.weight', 'l_inception_4e_5x5_reduce.bias', 'l_inception_4e_5x5_reduce_BatchNorm.weight', 'l_inception_4e_5x5_reduce_BatchNorm.bias', 'l_inception_4e_5x5_reduce_BatchNorm.running_mean', 'l_inception_4e_5x5_reduce_BatchNorm.running_var', 'l_inception_4e_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_4e_5x5.weight', 'l_inception_4e_5x5.bias', 'l_inception_4e_5x5_BatchNorm.weight', 'l_inception_4e_5x5_BatchNorm.bias', 'l_inception_4e_5x5_BatchNorm.running_mean', 'l_inception_4e_5x5_BatchNorm.running_var', 'l_inception_4e_5x5_BatchNorm.num_batches_tracked', 'l_inception_4e_pool_proj.weight', 'l_inception_4e_pool_proj.bias', 'l_inception_4e_pool_proj_BatchNorm.weight', 'l_inception_4e_pool_proj_BatchNorm.bias', 'l_inception_4e_pool_proj_BatchNorm.running_mean', 'l_inception_4e_pool_proj_BatchNorm.running_var', 'l_inception_4e_pool_proj_BatchNorm.num_batches_tracked', 'l_inception_5a_1x1.weight', 'l_inception_5a_1x1.bias', 'l_inception_5a_1x1_BatchNorm.weight', 'l_inception_5a_1x1_BatchNorm.bias', 'l_inception_5a_1x1_BatchNorm.running_mean', 'l_inception_5a_1x1_BatchNorm.running_var', 'l_inception_5a_1x1_BatchNorm.num_batches_tracked', 'l_inception_5a_3x3_reduce.weight', 'l_inception_5a_3x3_reduce.bias', 'l_inception_5a_3x3_reduce_BatchNorm.weight', 'l_inception_5a_3x3_reduce_BatchNorm.bias', 'l_inception_5a_3x3_reduce_BatchNorm.running_mean', 'l_inception_5a_3x3_reduce_BatchNorm.running_var', 'l_inception_5a_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_5a_3x3.weight', 'l_inception_5a_3x3.bias', 'l_inception_5a_3x3_BatchNorm.weight', 'l_inception_5a_3x3_BatchNorm.bias', 'l_inception_5a_3x3_BatchNorm.running_mean', 'l_inception_5a_3x3_BatchNorm.running_var', 'l_inception_5a_3x3_BatchNorm.num_batches_tracked', 'l_inception_5a_5x5_reduce.weight', 'l_inception_5a_5x5_reduce.bias', 'l_inception_5a_5x5_reduce_BatchNorm.weight', 'l_inception_5a_5x5_reduce_BatchNorm.bias', 'l_inception_5a_5x5_reduce_BatchNorm.running_mean', 'l_inception_5a_5x5_reduce_BatchNorm.running_var', 'l_inception_5a_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_5a_5x5.weight', 'l_inception_5a_5x5.bias', 'l_inception_5a_5x5_BatchNorm.weight', 'l_inception_5a_5x5_BatchNorm.bias', 'l_inception_5a_5x5_BatchNorm.running_mean', 'l_inception_5a_5x5_BatchNorm.running_var', 'l_inception_5a_5x5_BatchNorm.num_batches_tracked', 'l_inception_5a_pool_proj.weight', 'l_inception_5a_pool_proj.bias', 'l_inception_5a_pool_proj_BatchNorm.weight', 'l_inception_5a_pool_proj_BatchNorm.bias', 'l_inception_5a_pool_proj_BatchNorm.running_mean', 'l_inception_5a_pool_proj_BatchNorm.running_var', 'l_inception_5a_pool_proj_BatchNorm.num_batches_tracked', 'l_inception_5b_1x1.weight', 'l_inception_5b_1x1.bias', 'l_inception_5b_1x1_BatchNorm.weight', 'l_inception_5b_1x1_BatchNorm.bias', 'l_inception_5b_1x1_BatchNorm.running_mean', 'l_inception_5b_1x1_BatchNorm.running_var', 'l_inception_5b_1x1_BatchNorm.num_batches_tracked', 'l_inception_5b_3x3_reduce.weight', 'l_inception_5b_3x3_reduce.bias', 'l_inception_5b_3x3_reduce_BatchNorm.weight', 'l_inception_5b_3x3_reduce_BatchNorm.bias', 'l_inception_5b_3x3_reduce_BatchNorm.running_mean', 'l_inception_5b_3x3_reduce_BatchNorm.running_var', 'l_inception_5b_3x3_reduce_BatchNorm.num_batches_tracked', 'l_inception_5b_3x3.weight', 'l_inception_5b_3x3.bias', 'l_inception_5b_3x3_BatchNorm.weight', 'l_inception_5b_3x3_BatchNorm.bias', 'l_inception_5b_3x3_BatchNorm.running_mean', 'l_inception_5b_3x3_BatchNorm.running_var', 'l_inception_5b_3x3_BatchNorm.num_batches_tracked', 'l_inception_5b_5x5_reduce.weight', 'l_inception_5b_5x5_reduce.bias', 'l_inception_5b_5x5_reduce_BatchNorm.weight', 'l_inception_5b_5x5_reduce_BatchNorm.bias', 'l_inception_5b_5x5_reduce_BatchNorm.running_mean', 'l_inception_5b_5x5_reduce_BatchNorm.running_var', 'l_inception_5b_5x5_reduce_BatchNorm.num_batches_tracked', 'l_inception_5b_5x5.weight', 'l_inception_5b_5x5.bias', 'l_inception_5b_5x5_BatchNorm.weight', 'l_inception_5b_5x5_BatchNorm.bias', 'l_inception_5b_5x5_BatchNorm.running_mean', 'l_inception_5b_5x5_BatchNorm.running_var', 'l_inception_5b_5x5_BatchNorm.num_batches_tracked', 'l_inception_5b_pool_proj.weight', 'l_inception_5b_pool_proj.bias', 'l_inception_5b_pool_proj_BatchNorm.weight', 'l_inception_5b_pool_proj_BatchNorm.bias', 'l_inception_5b_pool_proj_BatchNorm.running_mean', 'l_inception_5b_pool_proj_BatchNorm.running_var', 'l_inception_5b_pool_proj_BatchNorm.num_batches_tracked', 'l_p5.weight', 'l_p5.bias', 'l_upsample_p5.weight', 'l_latlayer_4f.weight', 'l_latlayer_4f.bias', 'l_toplayer_p4.weight', 'l_toplayer_p4.bias', 'l_upsample_p4.weight', 'l_latlayer_3d.weight', 'l_latlayer_3d.bias', 'l_toplayer_p3.weight', 'l_toplayer_p3.bias', 'l_upsample_p3.weight', 'l_latlayer_2c.weight', 'l_latlayer_2c.bias', 'l_toplayer_p2.weight', 'l_toplayer_p2.bias']
import argparse
import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), '../../training'))
from fpn_resnet18 import FPNResnet18
import torch
import glob
import os
import numpy as np

def extract_pytorch_weight(model_path, npy_dir):
    model = FPNResnet18()
    model.load_state_dict(torch.load(model_path))
    os.makedirs(npy_dir, exist_ok=True)
    for key in keys:
        kind = key[key.rfind('.')+1:]
        name = key[2:key.rfind('.')]
        id = -1
        print(kind, name)
        if any([kind == t for t in ['weight', 'bias', 'running_var', 'running_mean']]) == False:
        # if any([kind == t for t in ['weight', 'bias']]) == False:
            print(model.state_dict()[key].shape)
            continue
            
        if kind == 'weight':
            id = 0
        elif kind == 'bias':
            id = 1
        elif kind == 'running_mean':
            id = 2
        elif kind == 'running_var':
            id = 3
        #do we have to transfer running_mean and running_variance of BatchNorm?
        path = npy_dir + '/' + name + '_' + str(id) + '.npy'
        
        size = model.state_dict()[key].shape[0]
        torch_weight = np.array([model.state_dict()[key][i].numpy() for i in range(size)])
        np.save(path, torch_weight)

    print('Done!')

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--weight", help="pytorch array weight file")
    parser.add_argument("-o", "--output", help="numpy array output path")
    args = parser.parse_args()
    extract_pytorch_weight(args.weight, args.output)