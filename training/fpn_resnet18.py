import torch.nn as nn
import torch.nn.functional as F
import torch

class FPNResnet18(nn.Module):
    def __init__(self, num_classes=5):
        super().__init__()
        self.l_conv1_7x7_s2 = nn.Conv2d(3,  64, 7,  2, bias=True, padding=3)
        self.l_conv1_7x7_s2_BatchNorm = nn.BatchNorm2d( 64)
        self.l_pool1_3x3_s2 = nn.MaxPool2d(3,  2, padding=0, ceil_mode=True)
        self.l_conv2_3x3_reduce = nn.Conv2d( 64,  64, 1,  1, bias=True, padding=0)
        self.l_conv2_3x3_reduce_BatchNorm = nn.BatchNorm2d( 64)
        self.l_conv2_3x3 = nn.Conv2d( 64,  192, 3,  1, bias=True, padding=1)
        self.l_conv2_3x3_BatchNorm = nn.BatchNorm2d( 192)
        self.l_pool2_3x3_s2 = nn.MaxPool2d(3,  2, padding=0, ceil_mode=True)
        self.l_inception_3a_1x1 = nn.Conv2d( 192,  64, 1,  1, bias=True, padding=0)
        self.l_inception_3a_1x1_BatchNorm = nn.BatchNorm2d( 64)
        self.l_inception_3a_3x3_reduce = nn.Conv2d( 192,  96, 1,  1, bias=True, padding=0)
        self.l_inception_3a_3x3_reduce_BatchNorm = nn.BatchNorm2d( 96)
        self.l_inception_3a_3x3 = nn.Conv2d( 96,  128, 3,  1, bias=True, padding=1)
        self.l_inception_3a_3x3_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_3a_5x5_reduce = nn.Conv2d( 192,  16, 1,  1, bias=True, padding=0)
        self.l_inception_3a_5x5_reduce_BatchNorm = nn.BatchNorm2d( 16)
        self.l_inception_3a_5x5 = nn.Conv2d( 16,  32, 5,  1, bias=True, padding=2)
        self.l_inception_3a_5x5_BatchNorm = nn.BatchNorm2d( 32)
        self.l_inception_3a_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_3a_pool_proj = nn.Conv2d( 192,  32, 1,  1, bias=True, padding=0)
        self.l_inception_3a_pool_proj_BatchNorm = nn.BatchNorm2d( 32)
        self.l_inception_3b_1x1 = nn.Conv2d(256,  128, 1,  1, bias=True, padding=0)
        self.l_inception_3b_1x1_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_3b_3x3_reduce = nn.Conv2d(256,  128, 1,  1, bias=True, padding=0)
        self.l_inception_3b_3x3_reduce_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_3b_3x3 = nn.Conv2d( 128,  192, 3,  1, bias=True, padding=1)
        self.l_inception_3b_3x3_BatchNorm = nn.BatchNorm2d( 192)
        self.l_inception_3b_5x5_reduce = nn.Conv2d(256,  32, 1,  1, bias=True, padding=0)
        self.l_inception_3b_5x5_reduce_BatchNorm = nn.BatchNorm2d( 32)
        self.l_inception_3b_5x5 = nn.Conv2d( 32,  96, 5,  1, bias=True, padding=2)
        self.l_inception_3b_5x5_BatchNorm = nn.BatchNorm2d( 96)
        self.l_inception_3b_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_3b_pool_proj = nn.Conv2d(256,  64, 1,  1, bias=True, padding=0)
        self.l_inception_3b_pool_proj_BatchNorm = nn.BatchNorm2d( 64)
        self.l_pool3_3x3_s2 = nn.MaxPool2d(3,  2, padding=0, ceil_mode=True)
        self.l_inception_4a_1x1 = nn.Conv2d(480,  192, 1,  1, bias=True, padding=0)
        self.l_inception_4a_1x1_BatchNorm = nn.BatchNorm2d( 192)
        self.l_inception_4a_3x3_reduce = nn.Conv2d(480,  96, 1,  1, bias=True, padding=0)
        self.l_inception_4a_3x3_reduce_BatchNorm = nn.BatchNorm2d( 96)
        self.l_inception_4a_3x3 = nn.Conv2d( 96,  208, 3,  1, bias=True, padding=1)
        self.l_inception_4a_3x3_BatchNorm = nn.BatchNorm2d( 208)
        self.l_inception_4a_5x5_reduce = nn.Conv2d(480,  16, 1,  1, bias=True, padding=0)
        self.l_inception_4a_5x5_reduce_BatchNorm = nn.BatchNorm2d( 16)
        self.l_inception_4a_5x5 = nn.Conv2d( 16,  48, 5,  1, bias=True, padding=2)
        self.l_inception_4a_5x5_BatchNorm = nn.BatchNorm2d( 48)
        self.l_inception_4a_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_4a_pool_proj = nn.Conv2d(480,  64, 1,  1, bias=True, padding=0)
        self.l_inception_4a_pool_proj_BatchNorm = nn.BatchNorm2d( 64)
        self.l_inception_4b_1x1 = nn.Conv2d(512,  160, 1,  1, bias=True, padding=0)
        self.l_inception_4b_1x1_BatchNorm = nn.BatchNorm2d( 160)
        self.l_inception_4b_3x3_reduce = nn.Conv2d(512,  112, 1,  1, bias=True, padding=0)
        self.l_inception_4b_3x3_reduce_BatchNorm = nn.BatchNorm2d( 112)
        self.l_inception_4b_3x3 = nn.Conv2d( 112,  224, 3,  1, bias=True, padding=1)
        self.l_inception_4b_3x3_BatchNorm = nn.BatchNorm2d( 224)
        self.l_inception_4b_5x5_reduce = nn.Conv2d(512,  24, 1,  1, bias=True, padding=0)
        self.l_inception_4b_5x5_reduce_BatchNorm = nn.BatchNorm2d( 24)
        self.l_inception_4b_5x5 = nn.Conv2d( 24,  64, 5,  1, bias=True, padding=2)
        self.l_inception_4b_5x5_BatchNorm = nn.BatchNorm2d( 64)
        self.l_inception_4b_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_4b_pool_proj = nn.Conv2d(512,  64, 1,  1, bias=True, padding=0)
        self.l_inception_4b_pool_proj_BatchNorm = nn.BatchNorm2d( 64)
        self.l_inception_4c_1x1 = nn.Conv2d(512,  128, 1,  1, bias=True, padding=0)
        self.l_inception_4c_1x1_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_4c_3x3_reduce = nn.Conv2d(512,  128, 1,  1, bias=True, padding=0)
        self.l_inception_4c_3x3_reduce_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_4c_3x3 = nn.Conv2d( 128,  256, 3,  1, bias=True, padding=1)
        self.l_inception_4c_3x3_BatchNorm = nn.BatchNorm2d( 256)
        self.l_inception_4c_5x5_reduce = nn.Conv2d(512,  24, 1,  1, bias=True, padding=0)
        self.l_inception_4c_5x5_reduce_BatchNorm = nn.BatchNorm2d( 24)
        self.l_inception_4c_5x5 = nn.Conv2d( 24,  64, 5,  1, bias=True, padding=2)
        self.l_inception_4c_5x5_BatchNorm = nn.BatchNorm2d( 64)
        self.l_inception_4c_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_4c_pool_proj = nn.Conv2d(512,  64, 1,  1, bias=True, padding=0)
        self.l_inception_4c_pool_proj_BatchNorm = nn.BatchNorm2d( 64)
        self.l_inception_4d_1x1 = nn.Conv2d(512,  112, 1,  1, bias=True, padding=0)
        self.l_inception_4d_1x1_BatchNorm = nn.BatchNorm2d( 112)
        self.l_inception_4d_3x3_reduce = nn.Conv2d(512,  144, 1,  1, bias=True, padding=0)
        self.l_inception_4d_3x3_reduce_BatchNorm = nn.BatchNorm2d( 144)
        self.l_inception_4d_3x3 = nn.Conv2d( 144,  288, 3,  1, bias=True, padding=1)
        self.l_inception_4d_3x3_BatchNorm = nn.BatchNorm2d( 288)
        self.l_inception_4d_5x5_reduce = nn.Conv2d(512,  32, 1,  1, bias=True, padding=0)
        self.l_inception_4d_5x5_reduce_BatchNorm = nn.BatchNorm2d( 32)
        self.l_inception_4d_5x5 = nn.Conv2d( 32,  64, 5,  1, bias=True, padding=2)
        self.l_inception_4d_5x5_BatchNorm = nn.BatchNorm2d( 64)
        self.l_inception_4d_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_4d_pool_proj = nn.Conv2d(512,  64, 1,  1, bias=True, padding=0)
        self.l_inception_4d_pool_proj_BatchNorm = nn.BatchNorm2d( 64)
        self.l_inception_4e_1x1 = nn.Conv2d(528,  256, 1,  1, bias=True, padding=0)
        self.l_inception_4e_1x1_BatchNorm = nn.BatchNorm2d( 256)
        self.l_inception_4e_3x3_reduce = nn.Conv2d(528,  160, 1,  1, bias=True, padding=0)
        self.l_inception_4e_3x3_reduce_BatchNorm = nn.BatchNorm2d( 160)
        self.l_inception_4e_3x3 = nn.Conv2d( 160,  320, 3,  1, bias=True, padding=1)
        self.l_inception_4e_3x3_BatchNorm = nn.BatchNorm2d( 320)
        self.l_inception_4e_5x5_reduce = nn.Conv2d(528,  32, 1,  1, bias=True, padding=0)
        self.l_inception_4e_5x5_reduce_BatchNorm = nn.BatchNorm2d( 32)
        self.l_inception_4e_5x5 = nn.Conv2d( 32,  128, 5,  1, bias=True, padding=2)
        self.l_inception_4e_5x5_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_4e_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_4e_pool_proj = nn.Conv2d(528,  128, 1,  1, bias=True, padding=0)
        self.l_inception_4e_pool_proj_BatchNorm = nn.BatchNorm2d( 128)
        self.l_pool4_3x3_s2 = nn.MaxPool2d(3,  2, padding=0, ceil_mode=True)
        self.l_inception_5a_1x1 = nn.Conv2d(832,  256, 1,  1, bias=True, padding=0)
        self.l_inception_5a_1x1_BatchNorm = nn.BatchNorm2d( 256)
        self.l_inception_5a_3x3_reduce = nn.Conv2d(832,  160, 1,  1, bias=True, padding=0)
        self.l_inception_5a_3x3_reduce_BatchNorm = nn.BatchNorm2d( 160)
        self.l_inception_5a_3x3 = nn.Conv2d( 160,  320, 3,  1, bias=True, padding=1)
        self.l_inception_5a_3x3_BatchNorm = nn.BatchNorm2d( 320)
        self.l_inception_5a_5x5_reduce = nn.Conv2d(832,  32, 1,  1, bias=True, padding=0)
        self.l_inception_5a_5x5_reduce_BatchNorm = nn.BatchNorm2d( 32)
        self.l_inception_5a_5x5 = nn.Conv2d( 32,  128, 5,  1, bias=True, padding=2)
        self.l_inception_5a_5x5_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_5a_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_5a_pool_proj = nn.Conv2d(832,  128, 1,  1, bias=True, padding=0)
        self.l_inception_5a_pool_proj_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_5b_1x1 = nn.Conv2d(832,  384, 1,  1, bias=True, padding=0)
        self.l_inception_5b_1x1_BatchNorm = nn.BatchNorm2d( 384)
        self.l_inception_5b_3x3_reduce = nn.Conv2d(832,  192, 1,  1, bias=True, padding=0)
        self.l_inception_5b_3x3_reduce_BatchNorm = nn.BatchNorm2d( 192)
        self.l_inception_5b_3x3 = nn.Conv2d( 192,  384, 3,  1, bias=True, padding=1)
        self.l_inception_5b_3x3_BatchNorm = nn.BatchNorm2d( 384)
        self.l_inception_5b_5x5_reduce = nn.Conv2d(832,  48, 1,  1, bias=True, padding=0)
        self.l_inception_5b_5x5_reduce_BatchNorm = nn.BatchNorm2d( 48)
        self.l_inception_5b_5x5 = nn.Conv2d( 48,  128, 5,  1, bias=True, padding=2)
        self.l_inception_5b_5x5_BatchNorm = nn.BatchNorm2d( 128)
        self.l_inception_5b_pool = nn.MaxPool2d(3,  1, padding=1)
        self.l_inception_5b_pool_proj = nn.Conv2d(832,  128, 1,  1, bias=True, padding=0)
        self.l_inception_5b_pool_proj_BatchNorm = nn.BatchNorm2d( 128)
        self.l_p5 = nn.Conv2d(1024,  32, 1,  1, bias=True, padding=0)
        self.l_upsample_p5 = nn.ConvTranspose2d( 32,  32,  4,  2, bias=False, padding=1)
        self.l_latlayer_4f = nn.Conv2d(832,  32, 1,  1, bias=True, padding=0)
        self.l_toplayer_p4 = nn.Conv2d(32,  32, 3,  1, bias=True, padding=1)
        self.l_upsample_p4 = nn.ConvTranspose2d( 32,  32,  4,  2, bias=False, padding=1)
        self.l_latlayer_3d = nn.Conv2d(480,  32, 1,  1, bias=True, padding=0)
        self.l_toplayer_p3 = nn.Conv2d(32,  32, 3,  1, bias=True, padding=1)
        self.l_upsample_p3 = nn.ConvTranspose2d( 32,  32,  4,  2, bias=False, padding=1)
        self.l_latlayer_2c = nn.Conv2d( 192,  32, 1,  1, bias=True, padding=0)
        # this final layer is same as Xilinx ML-Caffe-Segmentation Tutorial
        self.l_toplayer_p2 = nn.ConvTranspose2d(32,  num_classes,  4,  4, bias=True, padding=0)
        # this final layer is same as AI-Model Zoo
        # self.l_toplayer_p2 = nn.ConvTranspose2d(32,  num_classes,  4,  2, bias=True, padding=1)

    def forward(self, inputs):
        relu = nn.ReLU()
        conv1_7x7_s2 = self.l_conv1_7x7_s2(inputs)
        conv1_7x7_s2_BatchNorm = relu(self.l_conv1_7x7_s2_BatchNorm(conv1_7x7_s2))
        pool1_3x3_s2 = self.l_pool1_3x3_s2(conv1_7x7_s2_BatchNorm)
        conv2_3x3_reduce = self.l_conv2_3x3_reduce(pool1_3x3_s2)
        conv2_3x3_reduce_BatchNorm = relu(self.l_conv2_3x3_reduce_BatchNorm(conv2_3x3_reduce))
        conv2_3x3 = self.l_conv2_3x3(conv2_3x3_reduce_BatchNorm)
        conv2_3x3_BatchNorm = relu(self.l_conv2_3x3_BatchNorm(conv2_3x3))
        pool2_3x3_s2 = self.l_pool2_3x3_s2(conv2_3x3_BatchNorm)
        inception_3a_1x1 = self.l_inception_3a_1x1(pool2_3x3_s2)
        inception_3a_1x1_BatchNorm = relu(self.l_inception_3a_1x1_BatchNorm(inception_3a_1x1))
        inception_3a_3x3_reduce = self.l_inception_3a_3x3_reduce(pool2_3x3_s2)
        inception_3a_3x3_reduce_BatchNorm = relu(self.l_inception_3a_3x3_reduce_BatchNorm(inception_3a_3x3_reduce))
        inception_3a_3x3 = self.l_inception_3a_3x3(inception_3a_3x3_reduce_BatchNorm)
        inception_3a_3x3_BatchNorm = relu(self.l_inception_3a_3x3_BatchNorm(inception_3a_3x3))
        inception_3a_5x5_reduce = self.l_inception_3a_5x5_reduce(pool2_3x3_s2)
        inception_3a_5x5_reduce_BatchNorm = relu(self.l_inception_3a_5x5_reduce_BatchNorm(inception_3a_5x5_reduce))
        inception_3a_5x5 = self.l_inception_3a_5x5(inception_3a_5x5_reduce_BatchNorm)
        inception_3a_5x5_BatchNorm = relu(self.l_inception_3a_5x5_BatchNorm(inception_3a_5x5))
        inception_3a_pool = self.l_inception_3a_pool(pool2_3x3_s2)
        inception_3a_pool_proj = self.l_inception_3a_pool_proj(inception_3a_pool)
        inception_3a_pool_proj_BatchNorm = relu(self.l_inception_3a_pool_proj_BatchNorm(inception_3a_pool_proj))
        inception_3a_output = torch.cat((inception_3a_1x1_BatchNorm,inception_3a_3x3_BatchNorm,inception_3a_5x5_BatchNorm,inception_3a_pool_proj_BatchNorm), dim=1)
        inception_3b_1x1 = self.l_inception_3b_1x1(inception_3a_output)
        inception_3b_1x1_BatchNorm = relu(self.l_inception_3b_1x1_BatchNorm(inception_3b_1x1))
        inception_3b_3x3_reduce = self.l_inception_3b_3x3_reduce(inception_3a_output)
        inception_3b_3x3_reduce_BatchNorm = relu(self.l_inception_3b_3x3_reduce_BatchNorm(inception_3b_3x3_reduce))
        inception_3b_3x3 = self.l_inception_3b_3x3(inception_3b_3x3_reduce_BatchNorm)
        inception_3b_3x3_BatchNorm = relu(self.l_inception_3b_3x3_BatchNorm(inception_3b_3x3))
        inception_3b_5x5_reduce = self.l_inception_3b_5x5_reduce(inception_3a_output)
        inception_3b_5x5_reduce_BatchNorm = relu(self.l_inception_3b_5x5_reduce_BatchNorm(inception_3b_5x5_reduce))
        inception_3b_5x5 = self.l_inception_3b_5x5(inception_3b_5x5_reduce_BatchNorm)
        inception_3b_5x5_BatchNorm = relu(self.l_inception_3b_5x5_BatchNorm(inception_3b_5x5))
        inception_3b_pool = self.l_inception_3b_pool(inception_3a_output)
        inception_3b_pool_proj = self.l_inception_3b_pool_proj(inception_3b_pool)
        inception_3b_pool_proj_BatchNorm = relu(self.l_inception_3b_pool_proj_BatchNorm(inception_3b_pool_proj))
        inception_3b_output = torch.cat((inception_3b_1x1_BatchNorm,inception_3b_3x3_BatchNorm,inception_3b_5x5_BatchNorm,inception_3b_pool_proj_BatchNorm), dim=1)
        pool3_3x3_s2 = self.l_pool3_3x3_s2(inception_3b_output)
        inception_4a_1x1 = self.l_inception_4a_1x1(pool3_3x3_s2)
        inception_4a_1x1_BatchNorm = relu(self.l_inception_4a_1x1_BatchNorm(inception_4a_1x1))
        inception_4a_3x3_reduce = self.l_inception_4a_3x3_reduce(pool3_3x3_s2)
        inception_4a_3x3_reduce_BatchNorm = relu(self.l_inception_4a_3x3_reduce_BatchNorm(inception_4a_3x3_reduce))
        inception_4a_3x3 = self.l_inception_4a_3x3(inception_4a_3x3_reduce_BatchNorm)
        inception_4a_3x3_BatchNorm = relu(self.l_inception_4a_3x3_BatchNorm(inception_4a_3x3))
        inception_4a_5x5_reduce = self.l_inception_4a_5x5_reduce(pool3_3x3_s2)
        inception_4a_5x5_reduce_BatchNorm = relu(self.l_inception_4a_5x5_reduce_BatchNorm(inception_4a_5x5_reduce))
        inception_4a_5x5 = self.l_inception_4a_5x5(inception_4a_5x5_reduce_BatchNorm)
        inception_4a_5x5_BatchNorm = relu(self.l_inception_4a_5x5_BatchNorm(inception_4a_5x5))
        inception_4a_pool = self.l_inception_4a_pool(pool3_3x3_s2)
        inception_4a_pool_proj = self.l_inception_4a_pool_proj(inception_4a_pool)
        inception_4a_pool_proj_BatchNorm = relu(self.l_inception_4a_pool_proj_BatchNorm(inception_4a_pool_proj))
        inception_4a_output = torch.cat((inception_4a_1x1_BatchNorm,inception_4a_3x3_BatchNorm,inception_4a_5x5_BatchNorm,inception_4a_pool_proj_BatchNorm), dim=1)
        inception_4b_1x1 = self.l_inception_4b_1x1(inception_4a_output)
        inception_4b_1x1_BatchNorm = relu(self.l_inception_4b_1x1_BatchNorm(inception_4b_1x1))
        inception_4b_3x3_reduce = self.l_inception_4b_3x3_reduce(inception_4a_output)
        inception_4b_3x3_reduce_BatchNorm = relu(self.l_inception_4b_3x3_reduce_BatchNorm(inception_4b_3x3_reduce))
        inception_4b_3x3 = self.l_inception_4b_3x3(inception_4b_3x3_reduce_BatchNorm)
        inception_4b_3x3_BatchNorm = relu(self.l_inception_4b_3x3_BatchNorm(inception_4b_3x3))
        inception_4b_5x5_reduce = self.l_inception_4b_5x5_reduce(inception_4a_output)
        inception_4b_5x5_reduce_BatchNorm = relu(self.l_inception_4b_5x5_reduce_BatchNorm(inception_4b_5x5_reduce))
        inception_4b_5x5 = self.l_inception_4b_5x5(inception_4b_5x5_reduce_BatchNorm)
        inception_4b_5x5_BatchNorm = relu(self.l_inception_4b_5x5_BatchNorm(inception_4b_5x5))
        inception_4b_pool = self.l_inception_4b_pool(inception_4a_output)
        inception_4b_pool_proj = self.l_inception_4b_pool_proj(inception_4b_pool)
        inception_4b_pool_proj_BatchNorm = relu(self.l_inception_4b_pool_proj_BatchNorm(inception_4b_pool_proj))
        inception_4b_output = torch.cat((inception_4b_1x1_BatchNorm,inception_4b_3x3_BatchNorm,inception_4b_5x5_BatchNorm,inception_4b_pool_proj_BatchNorm), dim=1)
        inception_4c_1x1 = self.l_inception_4c_1x1(inception_4b_output)
        inception_4c_1x1_BatchNorm = relu(self.l_inception_4c_1x1_BatchNorm(inception_4c_1x1))
        inception_4c_3x3_reduce = self.l_inception_4c_3x3_reduce(inception_4b_output)
        inception_4c_3x3_reduce_BatchNorm = relu(self.l_inception_4c_3x3_reduce_BatchNorm(inception_4c_3x3_reduce))
        inception_4c_3x3 = self.l_inception_4c_3x3(inception_4c_3x3_reduce_BatchNorm)
        inception_4c_3x3_BatchNorm = relu(self.l_inception_4c_3x3_BatchNorm(inception_4c_3x3))
        inception_4c_5x5_reduce = self.l_inception_4c_5x5_reduce(inception_4b_output)
        inception_4c_5x5_reduce_BatchNorm = relu(self.l_inception_4c_5x5_reduce_BatchNorm(inception_4c_5x5_reduce))
        inception_4c_5x5 = self.l_inception_4c_5x5(inception_4c_5x5_reduce_BatchNorm)
        inception_4c_5x5_BatchNorm = relu(self.l_inception_4c_5x5_BatchNorm(inception_4c_5x5))
        inception_4c_pool = self.l_inception_4c_pool(inception_4b_output)
        inception_4c_pool_proj = self.l_inception_4c_pool_proj(inception_4c_pool)
        inception_4c_pool_proj_BatchNorm = relu(self.l_inception_4c_pool_proj_BatchNorm(inception_4c_pool_proj))
        inception_4c_output = torch.cat((inception_4c_1x1_BatchNorm,inception_4c_3x3_BatchNorm,inception_4c_5x5_BatchNorm,inception_4c_pool_proj_BatchNorm), dim=1)
        inception_4d_1x1 = self.l_inception_4d_1x1(inception_4c_output)
        inception_4d_1x1_BatchNorm = relu(self.l_inception_4d_1x1_BatchNorm(inception_4d_1x1))
        inception_4d_3x3_reduce = self.l_inception_4d_3x3_reduce(inception_4c_output)
        inception_4d_3x3_reduce_BatchNorm = relu(self.l_inception_4d_3x3_reduce_BatchNorm(inception_4d_3x3_reduce))
        inception_4d_3x3 = self.l_inception_4d_3x3(inception_4d_3x3_reduce_BatchNorm)
        inception_4d_3x3_BatchNorm = relu(self.l_inception_4d_3x3_BatchNorm(inception_4d_3x3))
        inception_4d_5x5_reduce = self.l_inception_4d_5x5_reduce(inception_4c_output)
        inception_4d_5x5_reduce_BatchNorm = relu(self.l_inception_4d_5x5_reduce_BatchNorm(inception_4d_5x5_reduce))
        inception_4d_5x5 = self.l_inception_4d_5x5(inception_4d_5x5_reduce_BatchNorm)
        inception_4d_5x5_BatchNorm = relu(self.l_inception_4d_5x5_BatchNorm(inception_4d_5x5))
        inception_4d_pool = self.l_inception_4d_pool(inception_4c_output)
        inception_4d_pool_proj = self.l_inception_4d_pool_proj(inception_4d_pool)
        inception_4d_pool_proj_BatchNorm = relu(self.l_inception_4d_pool_proj_BatchNorm(inception_4d_pool_proj))
        inception_4d_output = torch.cat((inception_4d_1x1_BatchNorm,inception_4d_3x3_BatchNorm,inception_4d_5x5_BatchNorm,inception_4d_pool_proj_BatchNorm), dim=1)
        inception_4e_1x1 = self.l_inception_4e_1x1(inception_4d_output)
        inception_4e_1x1_BatchNorm = relu(self.l_inception_4e_1x1_BatchNorm(inception_4e_1x1))
        inception_4e_3x3_reduce = self.l_inception_4e_3x3_reduce(inception_4d_output)
        inception_4e_3x3_reduce_BatchNorm = relu(self.l_inception_4e_3x3_reduce_BatchNorm(inception_4e_3x3_reduce))
        inception_4e_3x3 = self.l_inception_4e_3x3(inception_4e_3x3_reduce_BatchNorm)
        inception_4e_3x3_BatchNorm = relu(self.l_inception_4e_3x3_BatchNorm(inception_4e_3x3))
        inception_4e_5x5_reduce = self.l_inception_4e_5x5_reduce(inception_4d_output)
        inception_4e_5x5_reduce_BatchNorm = relu(self.l_inception_4e_5x5_reduce_BatchNorm(inception_4e_5x5_reduce))
        inception_4e_5x5 = self.l_inception_4e_5x5(inception_4e_5x5_reduce_BatchNorm)
        inception_4e_5x5_BatchNorm = relu(self.l_inception_4e_5x5_BatchNorm(inception_4e_5x5))
        inception_4e_pool = self.l_inception_4e_pool(inception_4d_output)
        inception_4e_pool_proj = self.l_inception_4e_pool_proj(inception_4e_pool)
        inception_4e_pool_proj_BatchNorm = relu(self.l_inception_4e_pool_proj_BatchNorm(inception_4e_pool_proj))
        inception_4e_output = torch.cat((inception_4e_1x1_BatchNorm,inception_4e_3x3_BatchNorm,inception_4e_5x5_BatchNorm,inception_4e_pool_proj_BatchNorm), dim=1)
        pool4_3x3_s2 = self.l_pool4_3x3_s2(inception_4e_output)
        inception_5a_1x1 = self.l_inception_5a_1x1(pool4_3x3_s2)
        inception_5a_1x1_BatchNorm = relu(self.l_inception_5a_1x1_BatchNorm(inception_5a_1x1))
        inception_5a_3x3_reduce = self.l_inception_5a_3x3_reduce(pool4_3x3_s2)
        inception_5a_3x3_reduce_BatchNorm = relu(self.l_inception_5a_3x3_reduce_BatchNorm(inception_5a_3x3_reduce))
        inception_5a_3x3 = self.l_inception_5a_3x3(inception_5a_3x3_reduce_BatchNorm)
        inception_5a_3x3_BatchNorm = relu(self.l_inception_5a_3x3_BatchNorm(inception_5a_3x3))
        inception_5a_5x5_reduce = self.l_inception_5a_5x5_reduce(pool4_3x3_s2)
        inception_5a_5x5_reduce_BatchNorm = relu(self.l_inception_5a_5x5_reduce_BatchNorm(inception_5a_5x5_reduce))
        inception_5a_5x5 = self.l_inception_5a_5x5(inception_5a_5x5_reduce_BatchNorm)
        inception_5a_5x5_BatchNorm = relu(self.l_inception_5a_5x5_BatchNorm(inception_5a_5x5))
        inception_5a_pool = self.l_inception_5a_pool(pool4_3x3_s2)
        inception_5a_pool_proj = self.l_inception_5a_pool_proj(inception_5a_pool)
        inception_5a_pool_proj_BatchNorm = relu(self.l_inception_5a_pool_proj_BatchNorm(inception_5a_pool_proj))
        inception_5a_output = torch.cat((inception_5a_1x1_BatchNorm,inception_5a_3x3_BatchNorm,inception_5a_5x5_BatchNorm,inception_5a_pool_proj_BatchNorm), dim=1)
        inception_5b_1x1 = self.l_inception_5b_1x1(inception_5a_output)
        inception_5b_1x1_BatchNorm = relu(self.l_inception_5b_1x1_BatchNorm(inception_5b_1x1))
        inception_5b_3x3_reduce = self.l_inception_5b_3x3_reduce(inception_5a_output)
        inception_5b_3x3_reduce_BatchNorm = relu(self.l_inception_5b_3x3_reduce_BatchNorm(inception_5b_3x3_reduce))
        inception_5b_3x3 = self.l_inception_5b_3x3(inception_5b_3x3_reduce_BatchNorm)
        inception_5b_3x3_BatchNorm = relu(self.l_inception_5b_3x3_BatchNorm(inception_5b_3x3))
        inception_5b_5x5_reduce = self.l_inception_5b_5x5_reduce(inception_5a_output)
        inception_5b_5x5_reduce_BatchNorm = relu(self.l_inception_5b_5x5_reduce_BatchNorm(inception_5b_5x5_reduce))
        inception_5b_5x5 = self.l_inception_5b_5x5(inception_5b_5x5_reduce_BatchNorm)
        inception_5b_5x5_BatchNorm = relu(self.l_inception_5b_5x5_BatchNorm(inception_5b_5x5))
        inception_5b_pool = self.l_inception_5b_pool(inception_5a_output)
        inception_5b_pool_proj = self.l_inception_5b_pool_proj(inception_5b_pool)
        inception_5b_pool_proj_BatchNorm = relu(self.l_inception_5b_pool_proj_BatchNorm(inception_5b_pool_proj))
        inception_5b_output = torch.cat((inception_5b_1x1_BatchNorm,inception_5b_3x3_BatchNorm,inception_5b_5x5_BatchNorm,inception_5b_pool_proj_BatchNorm), dim=1)
        p5 = self.l_p5(inception_5b_output)
        upsample_p5 = self.l_upsample_p5(p5)
        latlayer_4f = self.l_latlayer_4f(inception_4e_output)
        add_p4 = torch.add(upsample_p5,latlayer_4f)
        toplayer_p4 = self.l_toplayer_p4(add_p4)
        upsample_p4 = self.l_upsample_p4(toplayer_p4)
        latlayer_3d = self.l_latlayer_3d(inception_3b_output)
        add_p3 = torch.add(upsample_p4,latlayer_3d)
        toplayer_p3 = self.l_toplayer_p3(add_p3)
        upsample_p3 = self.l_upsample_p3(toplayer_p3)
        latlayer_2c = self.l_latlayer_2c(conv2_3x3_BatchNorm)
        add_p2 = torch.add(upsample_p3,latlayer_2c)
        toplayer_p2 = self.l_toplayer_p2(add_p2)

        outputs = toplayer_p2
        # this final layer is same as AI-Model-Zoo
        # outputs = nn.Upsample(scale_factor=2, mode='nearest')(toplayer_p2)
        return outputs

if __name__ == "__main__":
    from torchvision import models
    from torchsummary import summary
    model = FPNResnet18().cuda()
    summary(model, (3, 480, 960))
    # print(list(model.state_dict().keys()))
